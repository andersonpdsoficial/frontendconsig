"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/solicitacoesDeAverbacao/page",{

/***/ "(app-pages-browser)/./src/shared/services/apiService.ts":
/*!*******************************************!*\
  !*** ./src/shared/services/apiService.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkContratoExists: function() { return /* binding */ checkContratoExists; },\n/* harmony export */   createConsultaMargem: function() { return /* binding */ createConsultaMargem; },\n/* harmony export */   createReserva: function() { return /* binding */ createReserva; },\n/* harmony export */   deleteReservaInLocalApi: function() { return /* binding */ deleteReservaInLocalApi; },\n/* harmony export */   fetchConsignatariaFromLocalApi: function() { return /* binding */ fetchConsignatariaFromLocalApi; },\n/* harmony export */   fetchConsultas: function() { return /* binding */ fetchConsultas; },\n/* harmony export */   fetchMargemServidor: function() { return /* binding */ fetchMargemServidor; },\n/* harmony export */   fetchReservaFromLocalApi: function() { return /* binding */ fetchReservaFromLocalApi; },\n/* harmony export */   fetchServidorConsignadoFromExternalApi: function() { return /* binding */ fetchServidorConsignadoFromExternalApi; },\n/* harmony export */   fetchServidorFromExternalApi: function() { return /* binding */ fetchServidorFromExternalApi; },\n/* harmony export */   fetchServidorFromLocalApi: function() { return /* binding */ fetchServidorFromLocalApi; },\n/* harmony export */   fetchreRervaFromLocalApi: function() { return /* binding */ fetchreRervaFromLocalApi; },\n/* harmony export */   updateSituacaoInLocalApi: function() { return /* binding */ updateSituacaoInLocalApi; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n//busca de servidor na api externa SERVIDORES\nconst EXTERNAL_API_BASE_URL = \"https://athenas.defensoria.ro.def.br/api/servidores/\";\nconst EXTERNAL_API_TOKEN = \"682770e6bbe57c2736138619840a564bd0775486\";\nconst externalApi = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: EXTERNAL_API_BASE_URL,\n    headers: {\n        \"Authorization\": \"Token \".concat(EXTERNAL_API_TOKEN)\n    }\n});\n//Busca de servidor na api externa no CONSIGNADO\nconst EXTERNAL__CONSIGNADO_API_BASE_URL = \"https://athenas.defensoria.ro.def.br/api/consignado/\";\nconst EXTERNAL_CONSIGNADO_API_TOKEN = \"682770e6bbe57c2736138619840a564bd0775486\";\nconst externalConsignadoApi = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: EXTERNAL__CONSIGNADO_API_BASE_URL,\n    headers: {\n        \"Authorization\": \"Token \".concat(EXTERNAL_CONSIGNADO_API_TOKEN)\n    }\n});\n//Busca de dados na api local\nconst LOCAL_API_BASE_URL = \"http://localhost:8000/api\";\nconst LOCAL_API_TOKEN = \"682770e6bbe57c2736138619840a564bd0775486\";\nconst localApi = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: LOCAL_API_BASE_URL,\n    headers: {\n        \"Authorization\": \"Bearer \".concat(LOCAL_API_TOKEN)\n    }\n});\n// Função para buscar o servidor na API externa\nconst fetchServidorFromExternalApi = async (matricula)=>{\n    try {\n        const response = await externalApi.get(\"?matricula=\".concat(matricula));\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao buscar servidor na API externa:\", error);\n        throw error;\n    }\n};\n// Função para buscar o servidor na API externa consignado\nconst fetchServidorConsignadoFromExternalApi = async (matricula)=>{\n    try {\n        const response = await externalConsignadoApi.get(\"?matricula=\".concat(matricula));\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao buscar servidor na API externa consignado:\", error);\n        throw error;\n    }\n};\n// Função para buscar a consignataria  na API local\nconst fetchConsignatariaFromLocalApi = async ()=>{\n    try {\n        const response = await localApi.get(\"/consignatarias/\");\n        return response.data;\n    } catch (error) {\n        console.log(\"Erro ao buscar consignataria na Api Local:\", error);\n        throw error;\n    }\n};\n// Função para buscar o servidor na API local\nconst fetchServidorFromLocalApi = async (matricula)=>{\n    try {\n        const response = await localApi.get(\"/servidores/?matricula=\".concat(matricula));\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao buscar servidor na API local:\", error);\n        throw error;\n    }\n};\n// Função para criar um novo servidor na API local\n//Essa função foi desativada por não ser necessario\n// export const createServidor = async (servidorData: {\n//   nome: string;\n//   matricula: string;\n//   cadastradoPor?: string;\n//   modificadoPor?: string;\n//   desativadoPor?: string;\n//   desativadoEmData?: string;\n//   desativadoEmHora?: string;\n// }) => {\n//   try {\n//     const response = await localApi.post('/servidores/', servidorData, {\n//       headers: {\n//         'Authorization': `Bearer ${LOCAL_API_TOKEN}`\n//       }\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error('Erro ao criar servidor na API local:', error);\n//     throw error;\n//   }\n// };\n//Função para criar uma nova consulta de margem na API local\nconst createConsultaMargem = async (id_servidor, id_consignataria)=>{\n    try {\n        const response = await localApi.post(\"/consultas-margem-athenas/\", {\n            servidor: id_servidor,\n            consignataria: id_consignataria\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao criar consulta de margem:\", error);\n        throw error;\n    }\n};\n// Função para verificar se um contrato já existe\nconst checkContratoExists = async (contrato)=>{\n    try {\n        const response = await localApi.get(\"/reservas/\".concat(contrato), {\n            headers: {\n                \"Authorization\": \"Bearer \".concat(LOCAL_API_TOKEN)\n            }\n        });\n        return response.status === 200; // Retorna true se o contrato já existe\n    } catch (error) {\n        if (error.response && error.response.status === 404) {\n            return false; // Contrato não encontrado\n        }\n        console.error(\"Erro ao verificar exist\\xeancia do contrato:\", error);\n        throw new Error(\"Erro ao verificar exist\\xeancia do contrato\");\n    }\n};\n// Função para criar uma nova reserva\nconst fetchreRervaFromLocalApi = async (reservaData)=>{\n    if (reservaData.situacao !== \"0\") {\n        console.error(\"A situa\\xe7\\xe3o dever\\xe1 sempre ser 0, pois \\xe9 EM ANALISE\");\n        throw new Error(\"A situa\\xe7\\xe3o dever\\xe1 sempre ser 0, pois \\xe9 EM ANALISE\");\n    }\n    try {\n        const exists = await checkContratoExists(reservaData.contrato);\n        if (exists) {\n            console.error(\"Contrato j\\xe1 existente, favor informar outro\");\n            throw new Error(\"Contrato j\\xe1 existente, favor informar outro\");\n        }\n        const response = await localApi.post(\"/reservas/\", reservaData, {\n            headers: {\n                \"Authorization\": \"Bearer \".concat(LOCAL_API_TOKEN)\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao criar Reserva na API local:\", error);\n        throw error;\n    }\n};\n//gerencie as reservas diretamente do banco de dados. \nconst fetchReservaFromLocalApi = async ()=>{\n    try {\n        const response = await localApi.get(\"/reservas/\");\n        return response.data;\n    } catch (error) {\n        console.error(\"Erro ao buscar reservas na API local:\", error);\n        throw error;\n    }\n};\nconst updateSituacaoInLocalApi = async (id, situacao)=>{\n    try {\n        // Envia apenas o campo 'situacao' na requisição PATCH\n        await localApi.patch(\"/reservas/\".concat(id, \"/\"), situacao);\n    } catch (error) {\n        console.error(\"Erro ao atualizar situa\\xe7\\xe3o na API local:\", error);\n        throw error;\n    }\n};\nconst deleteReservaInLocalApi = async (id)=>{\n    try {\n        await localApi.delete(\"/reservas/\".concat(id, \"/\"));\n    } catch (error) {\n        console.error(\"Erro ao deletar reserva na API local:\", error);\n        throw error;\n    }\n};\n// Função de criação de reserva (não alterada, mas pode ser removida se for redundante)\nconst createReserva = async (reservaData)=>{\n    try {\n        const response = await localApi.post(\"/contrib/reserva/\", reservaData, {\n            headers: {\n                \"Authorization\": \"Token \".concat(LOCAL_API_BASE_URL)\n            }\n        });\n        return response.data; // Retorna os dados da reserva criada, incluindo o número do contrato\n    } catch (error) {\n        console.error(\"Erro ao criar reserva:\", error);\n        throw new Error(\"Erro ao criar reserva\");\n    }\n};\n// Função para buscar consultas\nconst fetchConsultas = async ()=>{\n    try {\n        const response = await localApi.get(\"/consultas-margem-athenas/\", {\n            headers: {\n                \"Authorization\": \"Token \".concat(LOCAL_API_TOKEN)\n            } // Certifique-se de incluir o header se necessário\n        });\n        // Verifique se a resposta é um array\n        if (Array.isArray(response.data.results)) {\n            return response.data.results;\n        } else {\n            console.error(\"Resposta da API n\\xe3o \\xe9 um array:\", response.data);\n            return []; // Retorne um array vazio para evitar erros\n        }\n    } catch (error) {\n        console.error(\"Erro ao buscar consultas:\", error);\n        return []; // Retorne um array vazio em caso de erro\n    }\n};\n// Função para buscar a margem disponível do servidor na API local\nconst fetchMargemServidor = async (matricula, id_consignataria)=>{\n    try {\n        const response = await localApi.post(\"/api/consultas-margem-athenas/\", {\n            servidor: matricula,\n            consignataria: id_consignataria\n        });\n        const { margemDisponivel, servidor, consignataria } = response.data;\n        // Verifique se os dados estão no formato correto\n        return {\n            margemDisponivel,\n            servidor,\n            consignataria\n        };\n    } catch (error) {\n        console.error(\"Erro ao buscar margem do servidor na API local:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/shared/services/apiService.ts\n"));

/***/ })

});